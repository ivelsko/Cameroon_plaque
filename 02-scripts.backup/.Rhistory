select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Pathway, CPM)
rownames(humann2_path_mat) <- humann2_path_mat$SampleID
humann2_path_mat <- as.matrix(humann2_path_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_path_pca <- tune.pca(humann2_path_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_path_allsamples.pca <- pca(humann2_path_mat, ncomp = 4, logratio = 'CLR')
# plot the PCA
pca_test_plot <- plot_pca(humann2_path_allsamples.pca, "PC1", "PC2", "Ethnic_Group")
pca_test_plot
# pca_test_plot_names <- plot_pca_names(humann2_path_allsamples.pca, "PC1", "PC3", "Ethnic_Group")
# pca_test_plot_names
# create the input matrix
humann2_path_mat <- humann2_path %>%
filter(!str_detect(Pathway, "\\|")) %>%
select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Pathway, CPM) %>%
filter(!str_detect(SampleID, "EXB|LIB"))
rownames(humann2_path_mat) <- humann2_path_mat$SampleID
humann2_path_mat <- as.matrix(humann2_path_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_path_pca <- tune.pca(humann2_path_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_path.pca <- pca(humann2_path_mat, ncomp = 3, logratio = 'CLR')
# plot the PCA
pca_EG_plot <- plot_pca(humann2_path.pca, "PC1", "PC2", "Ethnic_Group")
pca_EG_plot
# create the input matrix
humann2_path_mat <- humann2_path %>%
filter(!str_detect(Pathway, "\\|")) %>%
select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Pathway, CPM) %>%
filter(!str_detect(SampleID, "EXB|LIB|10M"))
rownames(humann2_path_mat) <- humann2_path_mat$SampleID
humann2_path_mat <- as.matrix(humann2_path_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_path_pca <- tune.pca(humann2_path_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_path.pca <- pca(humann2_path_mat, ncomp = 3, logratio = 'CLR')
# plot the PCA
pca_EG_plot <- plot_pca(humann2_path.pca, "PC1", "PC2", "Ethnic_Group")
pca_EG_plot
pca_AG_plot <- plot_pca(humann2_path.pca, "PC1", "PC2", "Age_group")
pca_AG_plot
pca_ME_plot <- plot_pca(humann2_path.pca, "PC1", "PC2", "Market_economy")
pca_ME_plot
pca_S_plot <- plot_pca(humann2_path.pca, "PC1", "PC2", "Sex")
pca_S_plot
pca_TS_plot <- plot_pca(humann2_path.pca, "PC1", "PC2", "Tooth_site")
pca_TS_plot
pca_V_plot <- plot_pca(humann2_path.pca, "PC1", "PC2", "Village")
pca_V_plot
humann2_path_mat <- humann2_path %>%
filter(!str_detect(Pathway, "\\|")) %>%
select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Pathway, CPM) %>%
filter(!str_detect(SampleID, "EXB|LIB|SRR|JAE"))
rownames(humann2_path_mat) <- humann2_path_mat$SampleID
humann2_path_mat <- as.matrix(humann2_path_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_path_pca <- tune.pca(humann2_path_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_path_cmc.pca <- pca(humann2_path_mat, ncomp = 3, logratio = 'CLR')
# plot the PCA
pca_EG_plot <- plot_pca(humann2_path_cmc.pca, "PC1", "PC2", "Ethnic_Group")
pca_EG_plot
pca_AG_plot <- plot_pca(humann2_path_cmc.pca, "PC1", "PC2", "Age_group")
pca_AG_plot
pca_ME_plot <- plot_pca(humann2_path_cmc.pca, "PC1", "PC2", "Market_economy")
pca_ME_plot
pca_S_plot <- plot_pca(humann2_path_cmc.pca, "PC1", "PC2", "Sex")
pca_S_plot
pca_TS_plot <- plot_pca(humann2_path_cmc.pca, "PC1", "PC2", "Tooth_site")
pca_TS_plot
pca_TS_plot <- plot_pca(humann2_path_cmc.pca, "PC3", "PC2", "Tooth_site")
pca_TS_plot
pca_V_plot <- plot_pca(humann2_path_cmc.pca, "PC1", "PC2", "Village")
pca_V_plot
# which paths distinguish sample types when HMP and JAE are included?
pca_EG_biplot_pc1 <- plot_pca_bi(humann2_path.pca, "PC1", "PC2", "Ethnic_Group", PC1, pathways = T)
pca_EG_biplot_pc1
# what are those pathways?
pandoc.table(pca_EG_biplot_pc1$plot_env$pws_10 %>% select(-flag) %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(pca_EG_biplot_pc1$plot_env$neg_10 %>% select(-flag) %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
# which paths distinguish sample types when HMP and JAE are included?
pca_EG_biplot_pc2 <- plot_pca_bi(humann2_path.pca, "PC1", "PC2", "Ethnic_Group", PC2, pathways = T)
pca_EG_biplot_pc2
# what are those pathways?
pandoc.table(pca_EG_biplot_pc2$plot_env$pws_10 %>% select(-flag) %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(pca_EG_biplot_pc2$plot_env$neg_10 %>% select(-flag) %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
# which paths distinguish sample groups when only CMC samples are included?
pca_EG_cmc_biplot_pc1 <- plot_pca_bi(humann2_path_cmc.pca, "PC1", "PC2", "Ethnic_Group", PC1, pathways = T)
pca_EG_cmc_biplot_pc1
# what are those pathways?
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$pws_10 %>% select(-flag) %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$neg_10 %>% select(-flag) %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
pca_EG_cmc_biplot_pc2 <- plot_pca_bi(humann2_path_cmc.pca, "PC1", "PC2", "Ethnic_Group", PC2, pathways = T)
pca_EG_cmc_biplot_pc2
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$pws_10 %>% select(-flag) %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$neg_10 %>% select(-flag) %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
# create the input matrix
humann2_KO_mat <- humann2_KOs %>%
filter(!str_detect(Ortholog, "\\|")) %>%
select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Ortholog, CPM)
rownames(humann2_KO_mat) <- humann2_KO_mat$SampleID
humann2_KO_mat <- as.matrix(humann2_KO_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_KO_pca <- tune.pca(humann2_KO_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_KO_allsamples.pca <- pca(humann2_KO_mat, ncomp = 4, logratio = 'CLR')
# plot the PCA
pca_test_plot <- plot_pca(humann2_KO_allsamples.pca, "PC1", "PC2", "Ethnic_Group")
pca_test_plot
# pca_test_plot_names <- plot_pca_names(humann2_KO_allsamples.pca, "PC1", "PC3", "Ethnic_Group")
# pca_test_plot_names
# create the input matrix
humann2_KO_mat <- humann2_KOs %>%
filter(!str_detect(Ortholog, "\\|")) %>%
select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Ortholog, CPM) %>%
filter(!str_detect(SampleID, "EXB|LIB"))
rownames(humann2_KO_mat) <- humann2_KO_mat$SampleID
humann2_KO_mat <- as.matrix(humann2_KO_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_path_pca <- tune.pca(humann2_KO_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_KO_noblanks.pca <- pca(humann2_KO_mat, ncomp = 3, logratio = 'CLR')
# plot the PCA
pca_EG_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Ethnic_Group")
pca_EG_plot
# create the input matrix
humann2_KO_mat <- humann2_KOs %>%
filter(!str_detect(Ortholog, "\\|")) %>%
select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Ortholog, CPM) %>%
filter(!str_detect(SampleID, "EXB|LIB|10M"))
rownames(humann2_KO_mat) <- humann2_KO_mat$SampleID
humann2_KO_mat <- as.matrix(humann2_KO_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_path_pca <- tune.pca(humann2_KO_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_KO_noblanks.pca <- pca(humann2_KO_mat, ncomp = 3, logratio = 'CLR')
# plot the PCA
pca_EG_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Ethnic_Group")
pca_EG_plot
pca_AG_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Age_group")
pca_AG_plot
pca_ME_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Market_economy")
pca_ME_plot
pca_S_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Sex")
pca_S_plot
pca_TS_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Tooth_site")
pca_TS_plot
pca_V_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Village")
pca_V_plot
# create the input matrix
humann2_KO_mat <- humann2_KOs %>%
filter(!str_detect(Ortholog, "\\|")) %>%
select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Ortholog, CPM) %>%
filter(!str_detect(SampleID, "EXB|LIB|SRR|JAE"))
# %>%
#   adorn_totals(where = "row", name = "Sum") %>%
#   gather("Ortholog","CPM", 2:ncol(.)) %>%
#   spread(SampleID, CPM) %>%
#   mutate(Percent = Sum/sum(Sum)) %>%
#   filter(Percent > 0.0005) %>%
#   gather("SampleID","CPM", 2:ncol(.)) %>%
#   spread(Ortholog, CPM)
#
rownames(humann2_KO_mat) <- humann2_KO_mat$SampleID
humann2_KO_mat <- as.matrix(humann2_KO_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_KO_pca <- tune.pca(humann2_KO_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_KO_cmc.pca <- pca(humann2_KO_mat, ncomp = 3, logratio = 'CLR')
# plot the PCA
pca_EG_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Ethnic_Group")
pca_EG_plot
pca_AG_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Age_group")
pca_AG_plot
pca_ME_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Market_economy")
pca_ME_plot
pca_S_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Sex")
pca_S_plot
pca_TS_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Tooth_site")
pca_TS_plot
pca_V_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Village")
pca_V_plot
# which paths distinguish sample types when HMP and JAE are included?
pca_EG_KO_biplot_pc1 <- plot_pca_bi(humann2_KO_noblanks.pca, "PC1", "PC2", "Ethnic_Group", PC1, pathways = F)
pca_EG_KO_biplot_pc1
# what are those pathways?
pandoc.table(pca_EG_KO_biplot_pc1$plot_env$pws_10 %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(pca_EG_KO_biplot_pc1$plot_env$neg_10 %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
# which paths distinguish sample types when HMP and JAE are included?
pca_EG_biplot_pc2 <- plot_pca_bi(humann2_KO_noblanks.pca, "PC1", "PC2", "Ethnic_Group", PC2, pathways = F)
pca_EG_biplot_pc2
# what are those pathways?
pandoc.table(pca_EG_biplot_pc2$plot_env$pws_10 %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(pca_EG_biplot_pc2$plot_env$neg_10 %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
# which paths distinguish sample groups when only CMC samples are included?
pca_EG_cmc_biplot_pc1 <- plot_pca_bi(humann2_KO_cmc.pca, "PC1", "PC2", "Ethnic_Group", PC1, pathways = F)
pca_EG_cmc_biplot_pc1
ggsave("~/Desktop/readflags.pdf", plot = pca_EG_cmc_biplot_pc1, device = "pdf",
scale = 1, width = 7, height = 5, units = c("in"),
dpi = 300)
# what are those pathways?
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$pws_10 %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$neg_10 %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
pca_EG_cmc_biplot_pc2 <- plot_pca_bi(humann2_KO_cmc.pca, "PC1", "PC2", "Ethnic_Group", PC2, pathways = F)
pca_EG_cmc_biplot_pc2
pandoc.table(pca_EG_cmc_biplot_pc2$plot_env$pws_10 %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(pca_EG_cmc_biplot_pc2$plot_env$neg_10  %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
View(humann2_KOs)
# create the input matrix
humann2_KO_mat <- humann2_KOs %>%
filter(!str_detect(Ortholog, "\\|")) %>%
select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Ortholog, CPM) %>%
filter(!str_detect(SampleID, "EXB|LIB|SRR|JAE")) %>%
adorn_totals(where = "row", name = "Sum") %>%
gather("Ortholog","CPM", 2:ncol(.)) %>%
spread(SampleID, CPM) %>%
mutate(Percent = Sum/sum(Sum)) %>%
filter(Percent > 0.0005) %>%
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Ortholog, CPM)
rownames(humann2_KO_mat) <- humann2_KO_mat$SampleID
humann2_KO_mat <- as.matrix(humann2_KO_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_KO_pca <- tune.pca(humann2_KO_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_KO_cmc.pca <- pca(humann2_KO_mat, ncomp = 3, logratio = 'CLR')
# plot the PCA
pca_EG_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Ethnic_Group")
pca_EG_plot
pca_AG_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Age_group")
pca_AG_plot
pca_ME_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Market_economy")
pca_ME_plot
pca_S_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Sex")
pca_S_plot
pca_TS_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Tooth_site")
pca_TS_plot
pca_V_plot <- plot_pca(humann2_KO_cmc.pca, "PC1", "PC2", "Village")
pca_V_plot
# which paths distinguish sample types when HMP and JAE are included?
pca_EG_KO_biplot_pc1 <- plot_pca_bi(humann2_KO_noblanks.pca, "PC1", "PC2", "Ethnic_Group", PC1, pathways = F)
pca_EG_KO_biplot_pc1
# what are those pathways?
pandoc.table(pca_EG_KO_biplot_pc1$plot_env$pws_10 %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(pca_EG_KO_biplot_pc1$plot_env$neg_10 %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
# which paths distinguish sample types when HMP and JAE are included?
pca_EG_biplot_pc2 <- plot_pca_bi(humann2_KO_noblanks.pca, "PC1", "PC2", "Ethnic_Group", PC2, pathways = F)
pca_EG_biplot_pc2
# what are those pathways?
pandoc.table(pca_EG_biplot_pc2$plot_env$pws_10 %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(pca_EG_biplot_pc2$plot_env$neg_10 %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
# which paths distinguish sample groups when only CMC samples are included?
pca_EG_cmc_biplot_pc1 <- plot_pca_bi(humann2_KO_cmc.pca, "PC1", "PC2", "Ethnic_Group", PC1, pathways = F)
pca_EG_cmc_biplot_pc1
ggsave("~/Desktop/readflags.pdf", plot = pca_EG_cmc_biplot_pc1, device = "pdf",
scale = 1, width = 7, height = 5, units = c("in"),
dpi = 300)
# what are those pathways?
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$pws_10 %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$neg_10 %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
pca_EG_cmc_biplot_pc2 <- plot_pca_bi(humann2_KO_cmc.pca, "PC1", "PC2", "Ethnic_Group", PC2, pathways = F)
pca_EG_cmc_biplot_pc2
pandoc.table(pca_EG_cmc_biplot_pc2$plot_env$pws_10 %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(pca_EG_cmc_biplot_pc2$plot_env$neg_10  %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
# create the input matrix
humann2_KO_mat <- humann2_KOs %>%
filter(!str_detect(Ortholog, "\\|")) %>%
select(-CMC032.B0101) %>% # this sample has very few reads
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Ortholog, CPM) %>%
filter(!str_detect(SampleID, "EXB|LIB|10M"))%>%
adorn_totals(where = "row", name = "Sum") %>%
gather("Ortholog","CPM", 2:ncol(.)) %>%
spread(SampleID, CPM) %>%
mutate(Percent = Sum/sum(Sum)) %>%
filter(Percent > 0.0005) %>%
gather("SampleID","CPM", 2:ncol(.)) %>%
spread(Ortholog, CPM)
rownames(humann2_KO_mat) <- humann2_KO_mat$SampleID
humann2_KO_mat <- as.matrix(humann2_KO_mat %>%
select(-SampleID)) + 1
# check the number of components to retain by tuning the PCA
tune.humann2_KO_pca <- tune.pca(humann2_KO_mat, logratio = 'CLR')
# perform a PCA to see how the data cluster
humann2_KO_noblanks.pca <- pca(humann2_KO_mat, ncomp = 3, logratio = 'CLR')
# plot the PCA
pca_EG_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Ethnic_Group")
pca_EG_plot
pca_AG_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Age_group")
pca_AG_plot
pca_ME_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Market_economy")
pca_ME_plot
pca_S_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Sex")
pca_S_plot
pca_TS_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Tooth_site")
pca_TS_plot
pca_V_plot <- plot_pca(humann2_KO_noblanks.pca, "PC1", "PC2", "Village")
pca_V_plot
# which paths distinguish sample types when HMP and JAE are included?
pca_EG_KO_biplot_pc1 <- plot_pca_bi(humann2_KO_noblanks.pca, "PC1", "PC2", "Ethnic_Group", PC1, pathways = F)
pca_EG_KO_biplot_pc1
# what are those pathways?
pandoc.table(pca_EG_KO_biplot_pc1$plot_env$pws_10 %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(pca_EG_KO_biplot_pc1$plot_env$neg_10 %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
# which paths distinguish sample types when HMP and JAE are included?
pca_EG_biplot_pc2 <- plot_pca_bi(humann2_KO_noblanks.pca, "PC1", "PC2", "Ethnic_Group", PC2, pathways = F)
pca_EG_biplot_pc2
# what are those pathways?
pandoc.table(pca_EG_biplot_pc2$plot_env$pws_10 %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(pca_EG_biplot_pc2$plot_env$neg_10 %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
# which paths distinguish sample groups when only CMC samples are included?
pca_EG_cmc_biplot_pc1 <- plot_pca_bi(humann2_KO_cmc.pca, "PC1", "PC2", "Ethnic_Group", PC1, pathways = F)
pca_EG_cmc_biplot_pc1
ggsave("~/Desktop/readflags.pdf", plot = pca_EG_cmc_biplot_pc1, device = "pdf",
scale = 1, width = 7, height = 5, units = c("in"),
dpi = 300)
# what are those pathways?
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$pws_10 %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(pca_EG_cmc_biplot_pc1$plot_env$neg_10 %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
pca_EG_cmc_biplot_pc2 <- plot_pca_bi(humann2_KO_cmc.pca, "PC1", "PC2", "Ethnic_Group", PC2, pathways = F)
pca_EG_cmc_biplot_pc2
pandoc.table(pca_EG_cmc_biplot_pc2$plot_env$pws_10 %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(pca_EG_cmc_biplot_pc2$plot_env$neg_10  %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
q()

ggtitle("sIPCA")
head(selectVar(malt_species_decontam_filtered_noblanks.sipca, comp = 1)$value)
malt_species_decontam_filtered_noblanks.sipca$loadings$X %>% as.data.frame(.) %>% rownames_to_column("species") %>% filter(str_detect(species, "Rothia")) %>% filter(V1 > 0)
metadata_noblanks <- metadata %>%
filter(!str_detect(SampleID, outliersF)) %>%
filter(!str_detect(SampleID, "EXB")) %>%
filter(!str_detect(SampleID, "LIB"))
malt_species_decontam_filtered_noblanks.plsda <- plsda(malt_species.decontam_filtered_noblanks, metadata_noblanks$Ethnic_Group, ncomp = 3, logratio = "CLR")
malt_species_decontam_filtered_noblanks.plsda.table <- as.data.frame(malt_species_decontam_filtered_noblanks.plsda$variates$X)
malt_species_decontam_filtered_noblanks.plsda.table <- malt_species_decontam_filtered_noblanks.plsda.table %>%
rownames_to_column("SampleID") %>%
inner_join(., metadata %>% select(SampleID, Ethnic_Group, Description, Age_group, Market_economy, Sex, Tooth_site, Village))
malt_species_decontam_filtered_noblanks.plsda.table %>%
ggplot(., aes(comp1, comp2, colour = Ethnic_Group, shape = Ethnic_Group)) +
geom_point(size = 3) +
scale_colour_manual(values = Ethnic_Group_colors) +
scale_shape_manual(values = Ethnic_Group_shapes) +
# stat_ellipse(aes(colour = Tooth_site, group = Tooth_site)) +
theme_minimal(base_size = 7) +
ggtitle("PLS-DA")
malt_species_decontam_filtered_noblanks.plsda$loadings$X %>%
as.data.frame(.) %>%
bind_cols(., malt_species_decontam_filtered_noblanks.plsda$names$colnames$X %>%
as.data.frame(.)) %>%
rename(Species = ".") %>%
select(Species, everything()) %>%
arrange((comp1))
# fa.parallel(malt_species.decontam_filtered_noblanks, fm = "minres", n.iter = 19)
malt_species.decontam_filtered_noblanks.fa <- fa(malt_species.decontam_filtered_noblanks, nfactors = 5, rotate = "varimax", fm = "minres") # fm = "ols"
print(malt_species.decontam_filtered_noblanks.fa)
print(malt_species.decontam_filtered_noblanks.fa$loadings,cutoff = 0.7)
print(malt_species.decontam_filtered_noblanks.fa,sort=TRUE)
malt_species.decontam_filtered_noblanks.fa$values %>%
as.data.frame(.) %>%
rename(Eigenvalues = ".") %>%
arrange(desc(Eigenvalues))%>%
rownames_to_column("xvalue") %>%
mutate(xvalue = as.numeric(xvalue)) %>%
filter(xvalue <= 20) %>%
ggplot(., aes(xvalue, Eigenvalues)) +
geom_point() +
theme_minimal() +
geom_hline(yintercept = 10, linetype = "dashed", color = "red")
# get the minimum residual values into a datatable
graphinfo <- as.data.frame(factor2cluster(malt_species.decontam_filtered_noblanks.fa))
graphinfo <- graphinfo %>%
rownames_to_column("Species") %>%
as_tibble(.)
# now make loadings into a table and designate each species in the residual with the highest absolute value
malt_species.decontam_filtered_noblanks.fa.df <- as.data.frame.matrix(malt_species.decontam_filtered_noblanks.fa$loadings)
malt_species.decontam_filtered_noblanks.fa.df <- malt_species.decontam_filtered_noblanks.fa.df %>%
as_tibble(.) %>%
bind_cols(., graphinfo) %>%
mutate(MR11 = as.character(MR11),
MR21 = as.character(MR21),
MR31 = as.character(MR31),
MR41 = as.character(MR41),
MR51 = as.character(MR51)) %>%
mutate(MR11 = replace(MR11, MR11 != "0", "MR1"),
MR21 = replace(MR21, MR21 != "0", "MR2"),
MR31 = replace(MR31, MR31 != "0", "MR3"),
MR41 = replace(MR41, MR41 != "0", "MR4"),
MR51 = replace(MR51, MR51 != "0", "MR5")) %>%
select(Species,everything(.)) %>%
gather("Group","Residual", 7:ncol(.)) %>%
filter(Residual != "0") %>%
select(Residual, Species, MR1, MR2, MR3, MR4, MR5)
# now run a discriminant analysis
malt_species.decontam_filtered_cmc <- malt_species.decontam %>%
select(-one_of(outliers)) %>%
select(-starts_with("EXB")) %>%
select(-starts_with("LIB")) %>%
select(-starts_with("SRR")) %>%
select(-starts_with("JAE")) %>%
adorn_totals(where = "col", name = "Sum_species") %>%
mutate(Percent = Sum_species/sum(Sum_species)*100) %>%
filter(Percent > 0.001) %>%
select(-one_of(c("Sum_species","Percent"))) %>%
gather("SampleID","Counts",2:ncol(.)) %>%
spread(Species,Counts)
rownames(malt_species.decontam_filtered_cmc) <- malt_species.decontam_filtered_cmc$SampleID
malt_species.decontam_filtered_cmc <- malt_species.decontam_filtered_cmc %>% select(-SampleID)
malt_species.decontam_filtered_cmc = malt_species.decontam_filtered_cmc+1
# prepare to run a PCA
# check the number of components to retain by tuning the PCA
tune.nt_species_pca <- tune.pca(malt_species.decontam_filtered_cmc, logratio = 'CLR')
tune.nt_species_pca
# perform and plot a PCA to see how the data cluster
# by Village
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Village", 3)
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Village", 3)
# by Sex
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Sex", 3)
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Sex", 3)
# by Age group
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Age_group", 3)
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Age_group", 3)
# by Market economy
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Market_economy", 3)
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Market_economy", 3)
# by Tooth site
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Tooth_site", 3)
plot_pca_titles(malt_species.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Tooth_site", 3)
# by Individual sequencing depth
# perform a PCA to see how the data cluster
malt_species.decontam_filtered_cmc.pca <- mixOmics::pca(malt_species.decontam_filtered_cmc, ncomp = 3, logratio = 'CLR')
plot(malt_species.decontam_filtered_cmc.pca)
# Select out the PC variates into a new table and add the metadata for plotting
malt_species.decontam_filtered_cmc.pca.variates <- as.data.frame(malt_species.decontam_filtered_cmc.pca$variates$X)
malt_species.decontam_filtered_cmc.pca.variates <- malt_species.decontam_filtered_cmc.pca.variates %>%
rownames_to_column("SampleID")
malt_species.decontam_filtered_cmc.pca.varmet <- inner_join(malt_species.decontam_filtered_cmc.pca.variates, metadata, by = "SampleID")
pca_malt_species_pc1pc2 <- ggplot(malt_species.decontam_filtered_cmc.pca.varmet, aes(PC1, PC2, colour = Individual_Seq_Depth_NonHuman, shape = Ethnic_Group)) +
geom_point(size = 4) +
xlab(paste("PC1 - ", round(malt_species.decontam_filtered_cmc.pca$explained_variance[1], 2), sep = "")) +
ylab(paste("PC2 - ", round(malt_species.decontam_filtered_cmc.pca$explained_variance[2], 2), sep = "")) +
theme_minimal(base_size = 14)
pca_malt_species_pc1pc2
# ggsave("05-results.backup/pca_nt_species_pc1pc2.pdf", plot = pca_nt_species_pc1pc2, device = "pdf",
#        scale = 1, width = 7, height = 5, units = c("in"),
#        dpi = 300)
# use the CLR-transformed matrix from the mixOmics PCA in the last section
# Euclidean distance
malt_species.decontam_filtered_cmc.euc <- vegdist(malt_species.decontam_filtered_cmc.pca$X, method = "euclidean", na.rm = T)
malt_species.decontam_filtered_cmc.euc.pcoa <- ape::pcoa(malt_species.decontam_filtered_cmc.euc)
malt_species.decontam_filtered_cmc.euc.pcoavectors <- as.data.frame(malt_species.decontam_filtered_cmc.euc.pcoa$vectors)
malt_species.decontam_filtered_cmc.euc.pcoavectors <- malt_species.decontam_filtered_cmc.euc.pcoavectors %>%
rownames_to_column("SampleID")
malt_species.decontam_filtered_cmc.euc.vecmet <- inner_join(malt_species.decontam_filtered_cmc.euc.pcoavectors, metadata, by = "SampleID")
malt_species.decontam_filtered_cmc.euc.vecmet %>%
ggplot(., aes(Axis.1, Axis.2, colour = Tooth_site, shape = Tooth_site)) +
geom_point(size = 3) +
scale_colour_manual(values = Tooth_site_colors) +
scale_shape_manual(values = Tooth_site_shapes) +
# stat_ellipse(aes(colour = Tooth_site, group = Tooth_site)) +
theme_minimal(base_size = 7) +
ggtitle("Tooth site")
# test for difference between different metadata categories
adonis(malt_species.decontam_filtered_cmc.euc ~ Tooth_site + Ethnic_Group + Age_group + Sex + Village + Market_economy, malt_species.decontam_filtered_cmc.euc.vecmet, perm=999)
malt_species.decontam_filtered_nocontrols <- malt_species.decontam %>%
select(-one_of(outliers)) %>%
select(-starts_with("EXB")) %>%
select(-starts_with("LIB")) %>%
select(-starts_with("JAE")) %>%
select(-starts_with("SRR")) %>%
adorn_totals(where = "col", name = "Sum_species") %>%
mutate(Percent = Sum_species/sum(Sum_species)*100) %>%
filter(Percent > 0.001) %>%
select(-one_of(c("Sum_species","Percent"))) %>%
gather("SampleID","Counts",2:ncol(.)) %>%
spread(Species,Counts)
rownames(malt_species.decontam_filtered_nocontrols) <- malt_species.decontam_filtered_nocontrols$SampleID
malt_species.decontam_filtered_nocontrols <- malt_species.decontam_filtered_nocontrols %>% select(-SampleID)
malt_species.decontam_filtered_nocontrols = malt_species.decontam_filtered_nocontrols+1
malt_species.decontam_filtered_nocontrols.pca <- mixOmics::pca(malt_species.decontam_filtered_nocontrols, ncomp = 3, logratio = 'CLR')
plot(malt_species.decontam_filtered_nocontrols.pca)
malt_species.decontam_filtered_nocontrols_biplot_121 <- plot_pca_bi(malt_species.decontam_filtered_nocontrols.pca, "PC1", "PC2", "Tooth_site", PC1)
malt_species.decontam_filtered_nocontrols_biplot_121
malt_species.decontam_filtered_nocontrols_biplot_122 <- plot_pca_bi(malt_species.decontam_filtered_nocontrols.pca, "PC1", "PC2", "Tooth_site", PC2)
malt_species.decontam_filtered_nocontrols_biplot_122
malt_species.decontam_filtered_nocontrols_biplot_322 <- plot_pca_bi(malt_species.decontam_filtered_nocontrols.pca, "PC3", "PC2", "Tooth_site", PC2)
malt_species.decontam_filtered_nocontrols_biplot_322
malt_species.decontam_filtered_nocontrols_biplot_323 <- plot_pca_bi(malt_species.decontam_filtered_nocontrols.pca, "PC3", "PC2", "Tooth_site", PC3)
malt_species.decontam_filtered_nocontrols_biplot_323
# what are those pathways?
pandoc.table(malt_species.decontam_filtered_nocontrols_biplot_121$plot_env$pws_10 %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(malt_species.decontam_filtered_nocontrols_biplot_121$plot_env$neg_10 %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
pandoc.table(malt_species.decontam_filtered_nocontrols_biplot_122$plot_env$pws_10 %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(malt_species.decontam_filtered_nocontrols_biplot_122$plot_env$neg_10 %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
pandoc.table(malt_species.decontam_filtered_nocontrols_biplot_323$plot_env$pws_10 %>% arrange(desc(PC3)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC3 positive loadings")
pandoc.table(malt_species.decontam_filtered_nocontrols_biplot_323$plot_env$neg_10 %>% arrange(PC3),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC3 negative loadings")
malt_species.decontam_filtered_cmc.sipca <- sipca(malt_species.decontam_filtered_cmc.pca$X, scale = F, ncomp = 3, keepX = c(100,100,100)) # 10,10,10 50,50,50 100,100,100
malt_species.decontam_filtered_cmc.sipca.table <- as.data.frame(malt_species.decontam_filtered_cmc.sipca$x)
malt_species.decontam_filtered_cmc.sipca.table <- malt_species.decontam_filtered_cmc.sipca.table %>%
rownames_to_column("SampleID") %>%
inner_join(., metadata %>% select(SampleID, Ethnic_Group, Description, Age_group, Market_economy, Sex, Tooth_site, Village))
malt_species.decontam_filtered_cmc.sipca.table %>%
ggplot(., aes(`IPC 1`, `IPC 2`, colour = Tooth_site, shape = Tooth_site)) +
geom_point(size = 3) +
scale_colour_manual(values = Tooth_site_colors) +
scale_shape_manual(values = Tooth_site_shapes) +
stat_ellipse(aes(colour = Tooth_site, group = Tooth_site)) +
theme_minimal(base_size = 7) +
ggtitle("sIPCA")
head(selectVar(malt_species.decontam_filtered_cmc.sipca, comp = 1)$value)
malt_species.decontam_filtered_cmc.sipca$loadings$X %>% as.data.frame(.) %>% rownames_to_column("species") %>% filter(V1 > 0) %>% arrange(desc(V1))
metadata_cmc <- metadata %>%
filter(!str_detect(SampleID, outliersF)) %>%
filter(str_detect(SampleID, "CMC"))
malt_species.decontam_filtered_cmc.plsda <- plsda(malt_species.decontam_filtered_cmc, metadata_cmc$Tooth_site, ncomp = 3, logratio = "CLR")
malt_species.decontam_filtered_cmc.plsda.table <- as.data.frame(malt_species.decontam_filtered_cmc.plsda$variates$X)
malt_species.decontam_filtered_cmc.plsda.table <- malt_species.decontam_filtered_cmc.plsda.table %>%
rownames_to_column("SampleID") %>%
inner_join(., metadata %>% select(SampleID, Ethnic_Group, Description, Age_group, Market_economy, Sex, Tooth_site, Village))
malt_species.decontam_filtered_cmc.plsda.table %>%
ggplot(., aes(comp1, comp2, colour = Tooth_site, shape = Tooth_site)) +
geom_point(size = 3) +
scale_colour_manual(values = Tooth_site_colors) +
scale_shape_manual(values = Tooth_site_shapes) +
# stat_ellipse(aes(colour = Tooth_site, group = Tooth_site)) +
theme_minimal(base_size = 7) +
ggtitle("PLS-DA")
malt_species.decontam_filtered_cmc.plsda$loadings$X %>%
as.data.frame(.) %>%
bind_cols(., malt_species.decontam_filtered_cmc.plsda$names$colnames$X %>%
as.data.frame(.)) %>%
rename(Species = ".") %>%
select(Species, everything()) %>%
arrange((comp1))
# fa.parallel(malt_species.decontam_filtered_cmc, fm = "minres", n.iter = 19)
malt_species.decontam_filtered_cmc.fa <- fa(malt_species.decontam_filtered_cmc, nfactors = 3, rotate = "varimax", fm = "minres") # fm = "ols"
print(malt_species.decontam_filtered_cmc.fa)
print(malt_species.decontam_filtered_cmc.fa$loadings,cutoff = 0.7)
print(malt_species.decontam_filtered_cmc.fa,sort=TRUE)
malt_species.decontam_filtered_cmc.fa$values %>%
as.data.frame(.) %>%
rename(Eigenvalues = ".") %>%
arrange(desc(Eigenvalues))%>%
rownames_to_column("xvalue") %>%
mutate(xvalue = as.numeric(xvalue)) %>%
filter(xvalue <= 20) %>%
ggplot(., aes(xvalue, Eigenvalues)) +
geom_point() +
theme_minimal() +
geom_hline(yintercept = 10, linetype = "dashed", color = "red")
# get the minimum residual values into a datatable
graphinfo <- as.data.frame(factor2cluster(malt_species.decontam_filtered_cmc.fa))
graphinfo <- graphinfo %>%
rownames_to_column("Species") %>%
as_tibble(.)
# now make loadings into a table and designate each species in the residual with the highest absolute value
malt_species.decontam_filtered_cmc.fa.df <- as.data.frame.matrix(malt_species.decontam_filtered_cmc.fa$loadings)
malt_species.decontam_filtered_cmc.fa.df <- malt_species.decontam_filtered_cmc.fa.df %>%
as_tibble(.) %>%
bind_cols(., graphinfo) %>%
mutate(MR11 = as.character(MR11),
MR21 = as.character(MR21),
MR31 = as.character(MR31)) %>%
mutate(MR11 = replace(MR11, MR11 != "0", "MR1"),
MR21 = replace(MR21, MR21 != "0", "MR2"),
MR31 = replace(MR31, MR31 != "0", "MR3")) %>%
select(Species,everything(.)) %>%
gather("Group","Residual", 7:ncol(.)) %>%
filter(Residual != "0") %>%
select(Residual, Species, MR1, MR2, MR3)
# now run a discriminant analysis
malt_genus.decontam_filtered <- malt_genus.decontam %>%
select(-one_of(outliers)) %>%
select(-starts_with("EXB")) %>%
select(-starts_with("LIB")) %>%
select(-contains("10M")) %>%
# select(-one_of(fullSRR)) %>%
adorn_totals(where = "col", name = "Sum_genus") %>%
mutate(Percent = Sum_genus/sum(Sum_genus)*100) %>%
filter(Percent > 0.01) %>%
select(-one_of(c("Sum_genus","Percent"))) %>%
gather("SampleID","Counts",2:ncol(.)) %>%
spread(Species,Counts)
rownames(malt_genus.decontam_filtered) <- malt_genus.decontam_filtered$SampleID
malt_genus.decontam_filtered <- malt_genus.decontam_filtered %>% select(-SampleID)
malt_genus.decontam_filtered = malt_genus.decontam_filtered+1
# prepare to run a PCA
# check the number of components to retain by tuning the PCA
tune.nt_genus_pca <- tune.pca(malt_genus.decontam_filtered, logratio = 'CLR')
tune.nt_genus_pca
# perform and plot a PCA to see how the data cluster
# by Village
plot_pca_titles(malt_genus.decontam_filtered, "PC1", "PC2", "Ethnic_Group", "Village", 3)
plot_pca_titles(malt_genus.decontam_filtered, "PC3", "PC2", "Ethnic_Group", "Village", 3)
# by Sex
plot_pca_titles(malt_genus.decontam_filtered, "PC1", "PC2", "Ethnic_Group", "Sex", 3)
plot_pca_titles(malt_genus.decontam_filtered, "PC3", "PC2", "Ethnic_Group", "Sex", 3)
# by Age group
plot_pca_titles(malt_genus.decontam_filtered, "PC1", "PC2", "Ethnic_Group", "Age_group", 3)
plot_pca_titles(malt_genus.decontam_filtered, "PC3", "PC2", "Ethnic_Group", "Age_group", 3)
# by Market economy
plot_pca_titles(malt_genus.decontam_filtered, "PC1", "PC2", "Ethnic_Group", "Market_economy", 3)
plot_pca_titles(malt_genus.decontam_filtered, "PC3", "PC2", "Ethnic_Group", "Market_economy", 3)
# by Tooth site
plot_pca_titles(malt_genus.decontam_filtered, "PC1", "PC2", "Ethnic_Group", "Tooth_site", 3)
plot_pca_titles(malt_genus.decontam_filtered, "PC3", "PC2", "Ethnic_Group", "Tooth_site", 3)
# by Individual sequencing depth
# perform a PCA to see how the data cluster
malt_genus.decontam_filtered.pca <- mixOmics::pca(malt_genus.decontam_filtered, ncomp = 3, logratio = 'CLR')
plot(malt_genus.decontam_filtered.pca)
# Select out the PC variates into a new table and add the metadata for plotting
malt_genus.decontam_filtered.pca.variates <- as.data.frame(malt_genus.decontam_filtered.pca$variates$X)
malt_genus.decontam_filtered.pca.variates <- malt_genus.decontam_filtered.pca.variates %>%
rownames_to_column("SampleID")
malt_genus.decontam_filtered.pca.varmet <- inner_join(malt_genus.decontam_filtered.pca.variates, metadata, by = "SampleID")
pca_malt_genus_pc1pc2 <- ggplot(malt_genus.decontam_filtered.pca.varmet, aes(PC1, PC2, colour = Individual_Seq_Depth_NonHuman, shape = Ethnic_Group)) +
geom_point(size = 4) +
# scale_colour_manual(values = common_colors) +
# scale_shape_manual(values = village_shapes) +
xlab(paste("PC1 - ", round(malt_genus.decontam_filtered.pca$explained_variance[1], 2), sep = "")) +
ylab(paste("PC2 - ", round(malt_genus.decontam_filtered.pca$explained_variance[2], 2), sep = "")) +
theme_minimal(base_size = 14)
pca_malt_genus_pc1pc2
# ggsave("05-results.backup/pca_malt_genus_pc1pc2.pdf", plot = pca_malt_genus_pc1pc2, device = "pdf",
#        scale = 1, width = 7, height = 5, units = c("in"),
#        dpi = 300)
malt_genus.decontam_filtered_biplot_121 <- plot_pca_bi(malt_genus.decontam_filtered.pca, "PC1", "PC2", "Village", PC1)
malt_genus.decontam_filtered_biplot_121
malt_genus.decontam_filtered_biplot_122 <- plot_pca_bi(malt_genus.decontam_filtered.pca, "PC1", "PC2", "Village", PC2)
malt_genus.decontam_filtered_biplot_122
malt_genus.decontam_filtered_biplot_322 <- plot_pca_bi(malt_genus.decontam_filtered.pca, "PC3", "PC2", "Village", PC2)
malt_genus.decontam_filtered_biplot_322
malt_genus.decontam_filtered_biplot_323 <- plot_pca_bi(malt_genus.decontam_filtered.pca, "PC3", "PC2", "Village", PC3)
malt_genus.decontam_filtered_biplot_323
# what are those pathways?
pandoc.table(malt_genus.decontam_filtered_biplot_121$plot_env$pws_10 %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(malt_genus.decontam_filtered_biplot_121$plot_env$neg_10 %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
pandoc.table(malt_genus.decontam_filtered_biplot_122$plot_env$pws_10 %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(malt_genus.decontam_filtered_biplot_122$plot_env$neg_10 %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
pandoc.table(malt_genus.decontam_filtered_biplot_323$plot_env$pws_10 %>% arrange(desc(PC3)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC3 positive loadings")
pandoc.table(malt_genus.decontam_filtered_biplot_323$plot_env$neg_10 %>% arrange(PC3),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC3 negative loadings")
malt_genus.decontam_filtered_cmc <- malt_genus.decontam %>%
select(-one_of(outliers)) %>%
select(-starts_with("EXB")) %>%
select(-starts_with("LIB")) %>%
select(-starts_with("SRR")) %>%
select(-starts_with("JAE")) %>%
adorn_totals(where = "col", name = "Sum_genus") %>%
mutate(Percent = Sum_genus/sum(Sum_genus)*100) %>%
filter(Percent > 0.001) %>%
select(-one_of(c("Sum_genus","Percent"))) %>%
gather("SampleID","Counts",2:ncol(.)) %>%
spread(Species,Counts)
rownames(malt_genus.decontam_filtered_cmc) <- malt_genus.decontam_filtered_cmc$SampleID
malt_genus.decontam_filtered_cmc <- malt_genus.decontam_filtered_cmc %>% select(-SampleID)
malt_genus.decontam_filtered_cmc = malt_genus.decontam_filtered_cmc+1
# prepare to run a PCA
# check the number of components to retain by tuning the PCA
tune.nt_genus_pca <- tune.pca(malt_genus.decontam_filtered_cmc, logratio = 'CLR')
tune.nt_genus_pca
# perform and plot a PCA to see how the data cluster
# by Village
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Village", 3)
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Village", 3)
# by Sex
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Sex", 3)
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Sex", 3)
# by Age group
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Age_group", 3)
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Age_group", 3)
# by Market economy
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Market_economy", 3)
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Market_economy", 3)
# by Tooth site
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC1", "PC2", "Ethnic_Group", "Tooth_site", 3)
plot_pca_titles(malt_genus.decontam_filtered_cmc, "PC3", "PC2", "Ethnic_Group", "Tooth_site", 3)
# by Individual sequencing depth
# perform a PCA to see how the data cluster
malt_genus.decontam_filtered_cmc.pca <- mixOmics::pca(malt_genus.decontam_filtered_cmc, ncomp = 3, logratio = 'CLR')
plot(malt_genus.decontam_filtered_cmc.pca)
# Select out the PC variates into a new table and add the metadata for plotting
malt_genus.decontam_filtered_cmc.pca.variates <- as.data.frame(malt_genus.decontam_filtered_cmc.pca$variates$X)
malt_genus.decontam_filtered_cmc.pca.variates <- malt_genus.decontam_filtered_cmc.pca.variates %>%
rownames_to_column("SampleID")
malt_genus.decontam_filtered_cmc.pca.varmet <- inner_join(malt_genus.decontam_filtered_cmc.pca.variates, metadata, by = "SampleID")
pca_malt_genus_pc1pc2 <- ggplot(malt_genus.decontam_filtered_cmc.pca.varmet, aes(PC1, PC2, colour = Individual_Seq_Depth_NonHuman, shape = Ethnic_Group)) +
geom_point(size = 4) +
# scale_colour_manual(values = common_colors) +
# scale_shape_manual(values = village_shapes) +
xlab(paste("PC1 - ", round(malt_genus.decontam_filtered_cmc.pca$explained_variance[1], 2), sep = "")) +
ylab(paste("PC2 - ", round(malt_genus.decontam_filtered_cmc.pca$explained_variance[2], 2), sep = "")) +
theme_minimal(base_size = 14)
pca_malt_genus_pc1pc2
# ggsave("05-results.backup/pca_malt_genus_pc1pc2.pdf", plot = pca_malt_genus_pc1pc2, device = "pdf",
#        scale = 1, width = 7, height = 5, units = c("in"),
#        dpi = 300)
# use the CLR-transformed matrix from the mixOmics PCA in the last section
# Euclidean distance
malt_genus.decontam_filtered_cmc.euc <- vegdist(malt_genus.decontam_filtered_cmc.pca$X, method = "euclidean", na.rm = T)
malt_genus.decontam_filtered_cmc.euc.pcoa <- ape::pcoa(malt_genus.decontam_filtered_cmc.euc)
malt_genus.decontam_filtered_cmc.euc.pcoavectors <- as.data.frame(malt_genus.decontam_filtered_cmc.euc.pcoa$vectors)
malt_genus.decontam_filtered_cmc.euc.pcoavectors <- malt_genus.decontam_filtered_cmc.euc.pcoavectors %>%
rownames_to_column("SampleID")
malt_genus.decontam_filtered_cmc.euc.vecmet <- inner_join(malt_genus.decontam_filtered_cmc.euc.pcoavectors, metadata, by = "SampleID")
malt_genus.decontam_filtered_cmc.euc.vecmet %>%
ggplot(., aes(Axis.1, Axis.2, colour = Tooth_site, shape = Tooth_site)) +
geom_point(size = 3) +
scale_colour_manual(values = Tooth_site_colors) +
scale_shape_manual(values = Tooth_site_shapes) +
stat_ellipse(aes(colour = Tooth_site, group = Tooth_site)) +
theme_minimal(base_size = 7) +
ggtitle("Tooth site")
# test for difference between different metadata categories
adonis(malt_genus.decontam_filtered_cmc.euc ~ Tooth_site  + Ethnic_Group + Age_group + Sex + Village + Market_economy, malt_genus.decontam_filtered_cmc.euc.vecmet, perm=999)
malt_genus.decontam_filtered_nocontrols <- malt_genus.decontam %>%
select(-one_of(outliers)) %>%
select(-starts_with("EXB")) %>%
select(-starts_with("LIB")) %>%
select(-starts_with("JAE")) %>%
select(-starts_with("SRR")) %>%
adorn_totals(where = "col", name = "Sum_genus") %>%
mutate(Percent = Sum_genus/sum(Sum_genus)*100) %>%
filter(Percent > 0.001) %>%
select(-one_of(c("Sum_genus","Percent"))) %>%
gather("SampleID","Counts",2:ncol(.)) %>%
spread(Species,Counts)
rownames(malt_genus.decontam_filtered_nocontrols) <- malt_genus.decontam_filtered_nocontrols$SampleID
malt_genus.decontam_filtered_nocontrols <- malt_genus.decontam_filtered_nocontrols %>% select(-SampleID)
malt_genus.decontam_filtered_nocontrols = malt_genus.decontam_filtered_nocontrols+1
malt_genus.decontam_filtered_nocontrols.pca <- mixOmics::pca(malt_genus.decontam_filtered_nocontrols, ncomp = 3, logratio = 'CLR')
plot(malt_genus.decontam_filtered_nocontrols.pca)
malt_genus_decontam_filtered_nocontrols_biplot_121 <- plot_pca_bi(malt_genus.decontam_filtered_nocontrols.pca, "PC1", "PC2", "Tooth_site", PC1)
malt_genus_decontam_filtered_nocontrols_biplot_121
malt_genus_decontam_filtered_nocontrols_biplot_122 <- plot_pca_bi(malt_genus.decontam_filtered_nocontrols.pca, "PC1", "PC2", "Tooth_site", PC2)
malt_genus_decontam_filtered_nocontrols_biplot_122
malt_genus_decontam_filtered_nocontrols_biplot_322 <- plot_pca_bi(malt_genus.decontam_filtered_nocontrols.pca, "PC3", "PC2", "Tooth_site", PC2)
malt_genus_decontam_filtered_nocontrols_biplot_322
malt_genus_decontam_filtered_nocontrols_biplot_323 <- plot_pca_bi(malt_genus.decontam_filtered_nocontrols.pca, "PC3", "PC2", "Tooth_site", PC3)
malt_genus_decontam_filtered_nocontrols_biplot_323
# what are those pathways?
pandoc.table(malt_genus_decontam_filtered_nocontrols_biplot_121$plot_env$pws_10 %>% arrange(desc(PC1)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 positive loadings")
pandoc.table(malt_genus_decontam_filtered_nocontrols_biplot_121$plot_env$neg_10 %>% arrange(PC1),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC1 negative loadings")
pandoc.table(malt_genus_decontam_filtered_nocontrols_biplot_122$plot_env$pws_10 %>% arrange(desc(PC2)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 positive loadings")
pandoc.table(malt_genus_decontam_filtered_nocontrols_biplot_122$plot_env$neg_10 %>% arrange(PC2),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC2 negative loadings")
pandoc.table(malt_genus_decontam_filtered_nocontrols_biplot_323$plot_env$pws_10 %>% arrange(desc(PC3)),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC3 positive loadings")
pandoc.table(malt_genus_decontam_filtered_nocontrols_biplot_323$plot_env$neg_10 %>% arrange(PC3),
digits = 5,
keep.trailing.zeros = T,
justify = "lccr",
split.tables = Inf,
caption = "PC3 negative loadings")
q()
